import logging
from aiogram import Bot, Dispatcher, types, F, Router
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import WebAppInfo, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
import asyncio

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_TOKEN = '7914747184:AAGrMX61goPxd-K8UkE7uYapQ7Pg7-dDHX8'
WEB_APP_URL = 'https://termos47.github.io/sitee'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
router = Router()
dp.include_router(router)

def webapp_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(
        text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        web_app=WebAppInfo(url=WEB_APP_URL)
    ))
    return builder.as_markup()

@router.message(Command("start", "help"))
async def send_welcome(message: types.Message):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π"""
    text = (
        "üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∏–Ω–æ—Ç–µ–∫—É!\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
        "–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /app –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞"
    )
    await message.answer(text, reply_markup=webapp_keyboard())

@router.message(Command("app"))
async def webapp_command(message: types.Message):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É"""
    await message.answer(
        "üñ•Ô∏è –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:",
        reply_markup=webapp_keyboard()
    )

@router.message(F.web_app_data)
async def handle_webapp_data(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    data = message.web_app_data.data
    await message.answer(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {data}")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())